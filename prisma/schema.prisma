generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Person {
  id        Int      @id @default(autoincrement())
  name      String
  lastname  String
  birthdate DateTime?
  phone     String
  document  String?
  userId    String   @unique
  locationId Int     
  createdAt DateTime @default(now())
  updatedAt DateTime
  User      User     @relation(fields: [userId], references: [id])
  Location  Location @relation(fields: [locationId], references: [id])
}

model ContactPerson {
  id              Int      @id @default(autoincrement())
  name            String
  lastname        String
  phone           String
  document        String?
  companyPosition String
  email           String   @default("")
  createdAt       DateTime @default(now())
  updatedAt       DateTime
  Company         Company[]
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  name        String   @default("")
  roleId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  Person      Person?
  Company     Company?
  Role        Role     @relation(fields: [roleId], references: [id])
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime
  User      User[]
}

model Activity {
  id        Int      @id @default(autoincrement())
  name      String
  code      String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime
  Company   Company[]
}

model Location {
  id        Int      @id @default(autoincrement())
  street    String
  number    String
  city      String
  state     String
  country   String
  zip       String
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())
  updatedAt DateTime
  Company   Company?
  Person    Person[]
}

model Company {
  id              Int      @id @default(autoincrement())
  name            String
  socialName      String
  description     String
  landlinePhone   String
  phone           String
  cifnif          String
  email           String? @default("")
  activityId      Int
  userId          String   @unique
  contactPersonId Int      @unique
  locationId      Int      @unique
  assetId         Int?     @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime
  Activity        Activity @relation(fields: [activityId], references: [id])
  User            User     @relation(fields: [userId], references: [id])
  Location        Location @relation(fields: [locationId], references: [id])
  Asset           Asset?    @relation(fields: [assetId], references: [id])
  ContactPerson   ContactPerson @relation(fields: [contactPersonId], references: [id])
}

model Asset {
  id          Int     @id @default(autoincrement())
  publicId    String
  secureUrl   String
  url         String
  width       Int
  height      Int
  format      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  Company   Company?
}